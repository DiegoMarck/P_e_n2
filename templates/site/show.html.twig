{% extends 'base.html.twig' %}

{% block title %}Site
{% endblock %}

{% block body %}

	<div class="siteTemplate">
		<div class="titreTemplate">
			<h1>Sites</h1>
		</div>
	</div>
	<a href='https://fr.freepik.com/photos/nuage'>Nuage photo créé par wirestock - fr.freepik.com</a>

	{# {% dump(media) %} #}
{# {{ dump(site) }} #}

	<section id="tabs" class="tab-container">
		<div>
			<h2>Site de {{ site.nom }}</h2>
		</div>
		<div class="container">
			<div class="onglets">
				<a href="#" class="actif" class="col-4" class="tabA">Détail</a>
				<a href="#" class="col-4" class="tabA">Photo</a>
				<a href="#" class="col-4" class="tabA">Météo</a>
			</div>
		</div>
		<div class="panel">
			<div class="container-fluid">
				<div class="row difficulté">
					<p class="">Site intéressant pour les voies</p>
					<div class="diff1">
						<div class="inline inlineA">
							<p class="difficulté2">de
								{{ site.difficulte ? site.difficulte|join(', ') : '' }}</p>
							<p class="difficulté2">à
								{{ site.difficulte2 ? site.difficulte2|join(', ') : '' }}</p>
						</div>
					</div>
				</div>
				<h4 class="descriptionSite">Description du Site</h4>
				<div class="row inline">
					<div class="col">
						<p>Type d'escalade :</p>
					</div>
					<div class="col">
						<p>{{ site.typeEscalade ? site.typeEscalade|join(', ') : '' }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Type d'équipement</p>
					</div>
					<div class="col">
						<p>{{ site.typeEquipement ? site.typeEquipement|join(', ') : '' }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Nombre de Voie</p>
					</div>
					<div class="col">
						<p>{{ site.nombredeVoie ? site.nombredeVoie|join(', ') : '' }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Hauteur maximum</p>
					</div>
					<div class="col">
						<p>{{ site.hauteurMax }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Type de rocher</p>
					</div>
					<div class="col">
						<p>{{ site.typeRocher ? site.typeRocher|join(', ') : '' }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Profile de falaise:</p>
					</div>
					<div class="col">
						<p>{{ site.profileFalaise ? site.profileFalaise|join(', ') : '' }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Type de Prise</p>
					</div>
					<div class="col">
						<p>{{ site.typedePrise ? site.typedePrise|join(', ') : '' }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Exposition</p>
					</div>
					<div class="col">
						<p>{{ site.exposition ? site.exposition|join(', ') : '' }}</p>
					</div>
				</div>
				<div class="row inline">
					<div class="col">
						<p>Altitude aux pieds des Voies</p>
					</div>
					<div class="col">
						<p>{{ site.altitudeAuxPiedsdesVoies }}</p>
					</div>
				</div>
			</div>
		</div>
		<div class="panel">
			{% for image in site.media %}
				
			{% if image != null %}
				<div class="panelImgSite">
					<img src="{{ asset('/uploads/' ~ image )}}" alt="{{image}}">
				</div>
			{% endif %}
				
				
			{% endfor %}
			{# {% for imageFile in site.media %} #}
				
			{% if site.images != null %}
				<div class="panelImgSite">
					<img src="{{ vich_uploader_asset(site, 'imageFile')}}" alt="{{site.images}}">
					
				</div>
			{% endif %}
			{# {% endfor %} #}
			

		</div>
		{# api Météo #}
		<div class="panel" id="apiMeteo">
			<section id="app">
				<div class="container">
					<div class="row justify-content-center">
							<div class="box-container square">
								<div class="description box inner-square">
									<div id="description"></div>
									<div id="icon" class="mesure"></div>
								</div>
								<div class="temp box inner-square">
									<i class="fa-solid fa-temperature-three-quarters"></i>
									<div id="temp" class="mesure"></div>
								</div>
								<div class="humidity box inner-square">
									<i>Humidité</i>
									<i class="fa-sharp fa-solid fa-droplet-percent"></i>
									<div id="humidity" class="mesure"></div>
								</div>
								<div class="wind box inner-square">
									<i class="fa-solid fa-wind"></i>
									<div id="wind" class="mesure"></div>
								</div>
							</div>
					</div>
				</div>
			</section>    
		</div>

	</section>

	{# map #}
	<section id="map">
		<div id="macarte2"></div>
	</section>
	
	{# {{ dump(site) }} #}

	
	<div class="bouton">
		<a href="{{ path('site_index') }}">back to list</a>
		<a href="{{ path('site_edit', {'id': site.id}) }}">edit</a>
		{{ include('site/_delete_form.html.twig') }}
	</div>

	

{% endblock %}
{% block javascripts %}

{# <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script> #}

<script>//api meteo

{# const weatherIcons = {
"Rain": "wi wi-day-rain",
"Clouds": "wi wi-day-cloudy",
"Clear": "wi wi-day-sunny",
"Snow": "wi wi-day-snow",
"mist": "wi wi-day-fog",
"Drizzle": "wi wi-day-sleet",
} #}
const API_KEY = 'ff5d53b6045f9333580b4c1992052756'; 

function capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}

function getPosition() {
  return new Promise((resolve, reject) => {
    navigator.geolocation.getCurrentPosition(resolve, reject);
  });
}

async function main2() {
  const position = await getPosition();
  const {latitude, longitude} = position.coords;

  const meteo = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&lang=fr&units=metric&appid=${API_KEY}`)
		.then((response) =>
			response.json().then((data) => {
				console.log(data);
				document.querySelector('#description').innerHTML = data.weather[0].description;
				document.querySelector('#icon').innerHTML = data.weather[0].icon;
				document.querySelector('#temp').innerHTML = data.main.temp + '°';
				document.querySelector('#humidity').innerHTML = data.main.humidity + '%';
				document.querySelector('#wind').innerHTML = data.wind.speed + '°';
			})
		)
		.catch((err) => console.log('erreur: ' + err));
	
}

main2();


</script>

<script>// gestion du tab/onglets

	function tabsPlugin() {
		let onglets = $('#tabs .onglets a')
		let panels = $('#tabs .panel');
		// console.log(panels, onglets);
		function openPanel(index) { // console.log(index);
			panels.css({'display': 'none'}); // panels , vous allez tous disparaître
			panels.eq(index).css({'display': 'block'}); // sauf celui de l'index du lien affiche toi
		}
		function setCssClass(onglet) {
			onglets.removeClass('actif');
			onglet.addClass('actif');
		}
		function setSize() {
			let h = 0;
			panels.each(function () {
			if (h < $(this).innerHeight()) {
			h = $(this).innerHeight();
		}
		// console.log($(this).innerHeight(), h)
		});
		panels.css({'height': h});
		}
			onglets.on('click', function (ev) {
			ev.preventDefault();
			openPanel($(this).index());
			setCssClass($(this));
		});
		function init() {
			openPanel(0);
			setSize();
		}
		init();
	}
	$(document).ready(function () {
	tabsPlugin();
	});
</script>

<script>//code de la carte

var latitude = {{ site.latitude|default(0) }};
var longitude = {{ site.longitude|default(0) }};
var site = {{ site|json_encode|raw }};



var carte = L.map('macarte2').setView([latitude, longitude], 12);
{# console.log(latitude, longitude);
console.log(site) #}

L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
	attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
	minZoom: 1,
	maxZoom: 20
}).addTo(carte)

var icone = L.icon({
	iconUrl: '../img/pointeur-de-carte.png',
	iconSize: [50, 50],
	iconAnchor: [25, 50],
	popupAnchor: [-2, -44]
});
function openGPS(latitude, longitude) {//open in GPS
	if (confirm('Do you want to open this location in Google Maps or Apple Maps?')) {
	if (navigator.userAgent.indexOf('iPhone') != -1 || navigator.userAgent.indexOf('iPad') != -1 || navigator.userAgent.indexOf('iPod') != -1) {
		window.open('maps://maps.apple.com/?q=' + latitude + ',' + longitude)
	} else {
		window.open('https://maps.google.com/?q=' + latitude + ',' + longitude)
	}
	}
}
$.ajax({
	url: '/api/sites'
}).done(function (response) {
	var sites = response['hydra:member'];
	sites.forEach((site) => {
		if (site.nom == "{{site.nom}}") { // vérifie si le site actuel correspond au site de la page
			var latLng = L.latLng(site.latitude, site.longitude);
			var marqueur = L.marker(latLng, { icon: icone }).addTo(carte);
			marqueur.bindPopup('<h5 class="nomSiteCarte">' + site.nom + '</h5><p class="nombredevoie">' + site.nombredeVoie + '</p><br /><a href="#" class="opengps" onclick="openGPS(\'' + site.latitude + "','" + site.longitude + '\')">Ouvrir dans le GPS</a>').openPopup();
			carte.setView([site.latitude, site.longitude], 14); // zoom sur le site
		}
	});
});
  
</script>

{# <script>
	function buttonClickGET() {
		var url = "https://https://api.openweathermap.org/data/2.5/weather?q="+lat_long+",fr&appid=c21a75b667d6f7abb81f118dcf8d4611&units=metric"

		$.get(url, callBackGetSuccess).done(function() {
			//alert( "second success" );
		})
		.fail(function() {
			alert( "error" );
		})
		.always(function() {
			//alert( "finished" );
		});
	}
	var callBackGetSuccess = function(data) {
		console/log("donnee api", data)
		var element = document.getElementById("zone_meteo");
		//var lat_long = document.getElementById("lat_long").value;
		element.innerHTML = "La temperature est de " + data.main.temp;
	}					
</script> #}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
{# <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script> #}

    
    
{% endblock %}
